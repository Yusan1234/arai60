python

```
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def detectCycle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        
        # hascycle or not
        if not head: return None
        if not head.next: return None

        slow, fast = head, head
        while fast and fast.next:
            fast = fast.next.next
            slow = slow.next
            if fast==slow:
                break

        if not fast or not fast.next: return None

        current = head
        pointer = slow
        while current!=pointer:
            current = current.next
            pointer = pointer.next
        return current
```
